/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.2.3).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ActivityTracker.Controller;

import ActivityTracker.model.Activity;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import java.util.List;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-07-25T01:21:42.638116-04:00[America/Toronto]")

@Validated
@Api(value = "activities", description = "the activities API")
public interface ActivitiesApi {

    default ActivitiesApiDelegate getDelegate() {
        return new ActivitiesApiDelegate() {};
    }

    /**
     * GET /activities/{date} : Find activities summary by date
     * Returns activities summary
     *
     * @param date date of record (required)
     * @return successful operation (status code 200)
     *         or Invalid date supplied (status code 400)
     */
    @ApiOperation(value = "Find activities summary by date", nickname = "getActivitiesByDate", notes = "Returns activities summary", response = Activity.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Activity.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Invalid date supplied") })
    @RequestMapping(value = "/activities/{date}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Activity>> getActivitiesByDate(@ApiParam(value = "date of record",required=true) @PathVariable("date") String date) {
        return getDelegate().getActivitiesByDate(date);
    }


    /**
     * GET /activities : obtains all activities
     * gets all the activities
     *
     * @return Returned all activities (status code 200)
     *         or Did not work. (status code 400)
     */
    @ApiOperation(value = "obtains all activities", nickname = "getAllActivities", notes = "gets all the activities", response = Activity.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returned all activities", response = Activity.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Did not work.") })
    @RequestMapping(value = "/activities",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Activity>> getAllActivities() {
        return getDelegate().getAllActivities();
    }

}
