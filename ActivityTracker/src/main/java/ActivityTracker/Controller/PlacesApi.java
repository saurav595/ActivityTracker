/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.2.3).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ActivityTracker.Controller;

import ActivityTracker.model.Places;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import java.util.List;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-07-25T01:21:42.638116-04:00[America/Toronto]")

@Validated
@Api(value = "places", description = "the places API")
public interface PlacesApi {

    default PlacesApiDelegate getDelegate() {
        return new PlacesApiDelegate() {};
    }

    /**
     * GET /places : obtains all places
     * gets all the places
     *
     * @return Returned all places (status code 200)
     *         or Did not work. (status code 400)
     */
    @ApiOperation(value = "obtains all places", nickname = "getAllPlaces", notes = "gets all the places", response = Places.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returned all places", response = Places.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Did not work.") })
    @RequestMapping(value = "/places",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Places>> getAllPlaces() {
        return getDelegate().getAllPlaces();
    }

}
